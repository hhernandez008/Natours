/*
COLORS:

Light green: #7ed56f, rgb(126,213,111)
Medium green: #55c57a, rgb(85,197,122)
Dark green: #28b485, rgb(40,180,133)

*/

$color-primary: #55c57a;
$color-pirmary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*, *::after, *::before {
     margin: 0;
     padding: 0;
     box-sizing: inherit;
}

html {
     font-size: 62.5%; /* so as not to override user font settings best to use % for initial font size. Default is 16px, 10px/16px = 62.5% */
     /* font-size: 10px; /* for rem calculating, 1 rem = 10 px; more responsive design*/
}

body {
     font-family: "Lato", sans-serif;
     font-weight: 400;
     font-size: 1.6rem;
     line-height: 1.7;
     color: $color-grey-dark;
     padding: 3rem;
     box-sizing: border-box; /*change box model so no pading or borders added to item size */
}

.header{
     height: 95vh; /* 95% of viewer height */
     background-image: linear-gradient(to right bottom, rgba($color-pirmary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
     /* linear gradient goes from the top left the the bottom right corner with the colors having an 80% opacity and is overlays the hero image */
     background-size: cover; /* will adapt to the size of the height given */
     background-position: top;
     clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
     position: relative;

     &__logo-box{
          position: absolute;
          top: 4rem;
          left: 4rem;
     }

     &__logo{
          height: 3.5rem;
     }

     &__text-box{
          position: absolute;
          top: 40%;
          left: 50%;
          transform: translate(-50%, -50%);
          /* shift element back 50% on the x-axis of the element and up 50% on the y-axis in relation to elements original position */
          text-align: center;
     }
}



.heading-primary{
     color: white;
     text-transform: uppercase;
     backface-visibility: hidden;
     margin-bottom: 6rem;

     &--main{
          display: block;
          font-size: 6rem;
          font-weight: 400;
          letter-spacing: 3.5rem;


          animation-name: moveInLeft;
          animation-duration: 1s;
          animation-timing-function: ease-out;
     }
     &--sub{
          display: block;
          font-size: 2rem;
          font-weight: 400;
          letter-spacing: 1.74rem;

          animation: moveInRight 1s ease-out;
          /* use animation properties as a shortcut for all of the individual properties.
          animation-name: moveInRight;
          animation-duration: 1s;
          animation-timing-function: ease-out; */
     }
}


.btn{
     position: relative;

     &::after{
          content: "";
          display: inline-block;
          height: 100%;
          width: 100%;
          border-radius: 10rem;
          position: absolute;
          top: 0;
          left: 0;
          z-index: -1;
          transition: all .4s;
     }

     &:link, &:visited {
          text-transform: uppercase;
          text-decoration: none;
          padding: 1.5rem 4rem;
          display: inline-block;
          border-radius: 10rem;
          transition: transform .2s; /* transition has to be on initial state */
          font-size: 1.6rem;
     }

     &:hover{
          transform: translateY(-0.3rem);
          box-shadow: 0 1rem 2rem rgba( 0, 0, 0, 0.2); /*X Y Blur Color*/

          &::after{
               transform: scaleX(1.4) scaleY(1.6);
               opacity: 0;
          }
     }

     &:active{
          transform: translateY(-0.1rem);
          box-shadow: 0 .5rem 1rem rgba( $color-black, 0.2);
     }

     &--white {
          background-color: $color-white;
          color: $color-grey-dark;

          &::after{
               background-color: white;
          }
     }

     .btn--animated{
          animation: moveInBottom .5s ease-out .75s;
          animation-fill-mode: backwards;
     }
}



@keyframes moveInLeft { /*animation, browsers optimized for only animating the opacity and transform properties*/
     0% { /*start*/
          opacity: 0;
          transform: translateX(-10rem);
     }
     80%{
          transform: translateX(1rem);
     }
     100% { /*finish*/
          opacity: 1;
          transform: translateX(0); /*as if not transformed at all*/
     }
}

@keyframes moveInRight { /*animation, browsers optimized for only animating the opacity and transform properties*/
     0% { /*start*/
          opacity: 0;
          transform: translateX(10rem);
     }
     80%{
          transform: translateX(-1rem);
     }
     100% { /*finish*/
          opacity: 1;
          transform: translateX(0); /*as if not transformed at all*/
     }
}

@keyframes moveInBottom { /*animation, browsers optimized for only animating the opacity and transform properties*/
     0% { /*start*/
          opacity: 0;
          transform: translateY(3rem);
     }

     100% { /*finish*/
          opacity: 1;
          transform: translateY(0); /*as if not transformed at all*/
     }
}
